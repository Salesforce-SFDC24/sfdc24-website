/**
 * Converts inputs to previous table API to the new table API.
 *
 * Note that the following options will not be converted:
 * - 'extended'
 * - 'filter'
 * - 'sort'
 * - 'no-header'
 * - 'no-truncate'
 * - 'row-start'
 * - 'print-line'
 *
 * @deprecated Please use the new table API directly.
 */
export function convertToNewTableAPI(data, columns, options) {
    const cols = Object.entries(columns).map(([key, opts]) => {
        if (opts.header)
            return { key, name: opts.header };
        return key;
    });
    const d = data.map((row) => Object.fromEntries(Object.entries(columns).map(([key, { get }]) => [key, get ? get(row) : row[key]])));
    return { data: d, title: options?.title, borderStyle: 'headers-only-with-underline', columns: cols };
}
//# sourceMappingURL=table.js.map